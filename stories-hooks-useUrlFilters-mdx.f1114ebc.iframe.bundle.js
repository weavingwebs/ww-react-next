"use strict";(self.webpackChunk_weavingwebs_ww_react_next=self.webpackChunk_weavingwebs_ww_react_next||[]).push([[119,71],{"./src/stories/hooks/useUrlFilters.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FullExampleWithPaging:()=>FullExampleWithPaging,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useUrlFilters_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/next-router-mock/dist/index.js"),format=__webpack_require__("./node_modules/date-fns/esm/format/index.js"),toDate=__webpack_require__("./node_modules/date-fns-tz/esm/toDate/index.js"),next_13_5=__webpack_require__("./node_modules/next-router-mock/dist/MemoryRouterProvider/next-13.5.js"),ww_react_dist=__webpack_require__("./node_modules/@weavingwebs/ww-react/dist/index.mjs");const mockData_namespaceObject=JSON.parse('[{"id":"7ebd6741-fc7f-4823-a6be-64cfe0d8af16","age":35,"name":"Gibson Blackwell","gender":"male","company":"ZILLAR","email":"gibsonblackwell@zillar.com","phone":"+44 7921469344","registered":"2018-09-23T07:46:00 -01:00"},{"id":"58219a6f-58bb-4e07-8b15-db12c0611178","age":28,"name":"Alberta Griffin","gender":"female","company":"CUBICIDE","email":"albertagriffin@cubicide.com","phone":"+44 7834501244","registered":"2021-05-28T12:10:53 -01:00"},{"id":"51b6753c-840d-42a5-af13-0a8cb9338c9c","age":36,"name":"Rowena Bryan","gender":"female","company":"ORBIFLEX","email":"rowenabryan@orbiflex.com","phone":"+44 7802523369","registered":"2016-05-14T07:33:42 -01:00"},{"id":"52b53fa7-ad26-4a05-a2f3-943ca0df7cb4","age":21,"name":"Tracey Ballard","gender":"female","company":"TROPOLIS","email":"traceyballard@tropolis.com","phone":"+44 7923542382","registered":"2021-11-16T02:29:21 -00:00"},{"id":"2019f676-dab5-4e31-ab3c-d9966cfb67a8","age":40,"name":"Snider Watkins","gender":"male","company":"KROG","email":"sniderwatkins@krog.com","phone":"+44 7969469213","registered":"2018-04-05T08:55:46 -01:00"},{"id":"c01aa83e-30e3-4562-83eb-9ed3fb9593a8","age":25,"name":"Chambers Dawson","gender":"male","company":"EMPIRICA","email":"chambersdawson@empirica.com","phone":"+44 7974455366","registered":"2020-10-28T08:19:02 -00:00"},{"id":"143f65d0-a160-444b-b411-ec4f5713d8d9","age":30,"name":"Amelia Vega","gender":"female","company":"NEBULEAN","email":"ameliavega@nebulean.com","phone":"+44 7892412303","registered":"2016-04-22T10:15:09 -01:00"},{"id":"8c551732-67ab-4eb1-81a7-4e5d53c12471","age":22,"name":"Jocelyn Collier","gender":"female","company":"EARBANG","email":"jocelyncollier@earbang.com","phone":"+44 7828571316","registered":"2016-12-21T06:40:27 -00:00"},{"id":"89cff3cf-696a-4be6-94af-37999bbafaef","age":35,"name":"Hattie Mcconnell","gender":"female","company":"XIXAN","email":"hattiemcconnell@xixan.com","phone":"+44 7840414243","registered":"2016-11-04T03:24:29 -00:00"},{"id":"4909d82e-4965-4f55-b97d-31e0ccf2fbc0","age":25,"name":"Grace Mccormick","gender":"female","company":"ZIPAK","email":"gracemccormick@zipak.com","phone":"+44 7810434369","registered":"2014-02-23T11:15:43 -00:00"},{"id":"300bb579-1327-40a7-abec-205c6084b564","age":21,"name":"Lydia Richmond","gender":"female","company":"SCHOOLIO","email":"lydiarichmond@schoolio.com","phone":"+44 7837511281","registered":"2020-06-27T04:56:46 -01:00"},{"id":"572505c2-bb7c-454b-ac16-6b56b1810f5d","age":25,"name":"Alford Compton","gender":"male","company":"CABLAM","email":"alfordcompton@cablam.com","phone":"+44 7815487276","registered":"2022-12-15T08:32:35 -00:00"},{"id":"09b165c3-e643-4a1d-accb-b0f0c57b9022","age":36,"name":"Fitzgerald Beck","gender":"male","company":"FARMAGE","email":"fitzgeraldbeck@farmage.com","phone":"+44 7959546253","registered":"2014-02-19T10:30:08 -00:00"},{"id":"4e1f9603-ceb7-4388-ac72-11c7c93e03c6","age":25,"name":"Norma Monroe","gender":"female","company":"PETIGEMS","email":"normamonroe@petigems.com","phone":"+44 7919578254","registered":"2020-02-08T08:41:14 -00:00"},{"id":"2d30a00c-a037-40a6-bc11-b25e9cfde206","age":22,"name":"Autumn Moody","gender":"female","company":"BUZZMAKER","email":"autumnmoody@buzzmaker.com","phone":"+44 7997518318","registered":"2022-06-18T05:18:28 -01:00"},{"id":"827db416-0125-4d61-a2e8-9b3675e77eee","age":39,"name":"Jeannie Ruiz","gender":"female","company":"COMTREK","email":"jeannieruiz@comtrek.com","phone":"+44 7955419220","registered":"2021-05-19T10:59:00 -01:00"},{"id":"c50e3a36-9b9a-4fe8-aaf9-1e577c74f6f4","age":40,"name":"Allen Anderson","gender":"male","company":"LUNCHPAD","email":"allenanderson@lunchpad.com","phone":"+44 7896509325","registered":"2017-10-24T02:12:30 -01:00"},{"id":"5fcfb0b6-3562-45e9-b792-91306821a6b5","age":38,"name":"Keith Dodson","gender":"male","company":"INCUBUS","email":"keithdodson@incubus.com","phone":"+44 7992503209","registered":"2019-06-30T02:14:06 -01:00"},{"id":"aae7b67d-45d3-49f8-8476-1dd4e5ccb1f4","age":31,"name":"Andrea Carey","gender":"female","company":"GEEKETRON","email":"andreacarey@geeketron.com","phone":"+44 7804459369","registered":"2017-11-16T06:21:35 -00:00"},{"id":"69837949-34c2-451b-8ed5-6572a877c7e0","age":35,"name":"Mitchell Nunez","gender":"male","company":"TALAE","email":"mitchellnunez@talae.com","phone":"+44 7934416200","registered":"2022-04-08T02:56:08 -01:00"},{"id":"d0757052-86af-4538-9a3a-15e524acb412","age":28,"name":"Short Mercado","gender":"male","company":"DYMI","email":"shortmercado@dymi.com","phone":"+44 7971553304","registered":"2017-01-10T09:04:28 -00:00"},{"id":"44f292f3-e1ef-4a8b-82df-3e1119581a6f","age":38,"name":"Valentine Stevenson","gender":"male","company":"MULTIFLEX","email":"valentinestevenson@multiflex.com","phone":"+44 7863508213","registered":"2019-06-12T07:41:14 -01:00"},{"id":"ce20bcc5-4205-488c-b084-a23427c3fcbb","age":35,"name":"Skinner Holder","gender":"male","company":"QOT","email":"skinnerholder@qot.com","phone":"+44 7942516365","registered":"2019-10-13T08:16:48 -01:00"},{"id":"b1d8649e-88f9-4b4b-ad32-fe35f49119f2","age":26,"name":"Summers Holt","gender":"male","company":"DARWINIUM","email":"summersholt@darwinium.com","phone":"+44 7940512223","registered":"2022-05-05T01:24:00 -01:00"},{"id":"68641fe4-077a-4d0c-be0f-2cf60e0bf0c8","age":20,"name":"Jensen Newton","gender":"male","company":"ENORMO","email":"jensennewton@enormo.com","phone":"+44 7854556362","registered":"2021-12-29T08:16:37 -00:00"},{"id":"1e0016c7-fdd3-4980-8a8b-761d8f61b8c7","age":32,"name":"Richards Ratliff","gender":"male","company":"OBONES","email":"richardsratliff@obones.com","phone":"+44 7806599332","registered":"2017-11-13T12:28:21 -00:00"},{"id":"12f81e70-7a25-4d97-a778-3a14c16b9e38","age":38,"name":"Nielsen Moran","gender":"male","company":"ENTHAZE","email":"nielsenmoran@enthaze.com","phone":"+44 7899450358","registered":"2021-11-20T02:01:07 -00:00"},{"id":"75f48282-5caf-4793-8d06-5c70a8efbe42","age":25,"name":"Alvarado Marsh","gender":"male","company":"CORPULSE","email":"alvaradomarsh@corpulse.com","phone":"+44 7968413224","registered":"2021-02-24T03:15:38 -00:00"},{"id":"82ce402a-1a30-4a74-9384-7e074c1398e9","age":32,"name":"Saundra Landry","gender":"female","company":"ZOLAR","email":"saundralandry@zolar.com","phone":"+44 7819514210","registered":"2020-05-19T10:04:11 -01:00"},{"id":"5cdf739e-cfcc-41f1-9798-dfb13c679b48","age":20,"name":"Stone Baxter","gender":"male","company":"BLANET","email":"stonebaxter@blanet.com","phone":"+44 7921588206","registered":"2018-04-03T03:33:59 -01:00"},{"id":"a239741e-283e-4bf9-ae3a-8f8f3fa3f56d","age":21,"name":"Hays Porter","gender":"male","company":"ADORNICA","email":"haysporter@adornica.com","phone":"+44 7832537240","registered":"2023-07-12T09:14:05 -01:00"},{"id":"288c4024-fbb4-4086-890e-0454ec78cfba","age":20,"name":"Glenn House","gender":"male","company":"QIAO","email":"glennhouse@qiao.com","phone":"+44 7884573268","registered":"2022-10-05T10:57:19 -01:00"},{"id":"efcd8943-9a8d-44cf-b61a-f190426cdbdd","age":25,"name":"Clara Norman","gender":"female","company":"ROUGHIES","email":"claranorman@roughies.com","phone":"+44 7801573388","registered":"2016-03-18T05:42:17 -00:00"},{"id":"b4e6ff8a-89f4-4d9c-a590-03a13b553262","age":25,"name":"Long Ray","gender":"male","company":"NUTRALAB","email":"longray@nutralab.com","phone":"+44 7972449346","registered":"2022-07-31T07:43:26 -01:00"},{"id":"6c2de980-df03-44c4-acf6-c9daf28744c1","age":26,"name":"Estelle Salinas","gender":"female","company":"ULTRASURE","email":"estellesalinas@ultrasure.com","phone":"+44 7839600204","registered":"2018-06-12T06:18:58 -01:00"},{"id":"e93b0ba7-e378-4502-b9fe-25b7c7c0d5e2","age":32,"name":"Munoz Pearson","gender":"male","company":"ZILLAN","email":"munozpearson@zillan.com","phone":"+44 7838490309","registered":"2022-11-11T01:27:02 -00:00"},{"id":"932ff67e-e9ac-42ae-b844-9db80d6b70ae","age":34,"name":"Espinoza Wilkins","gender":"male","company":"XURBAN","email":"espinozawilkins@xurban.com","phone":"+44 7956460381","registered":"2017-05-08T04:52:17 -01:00"},{"id":"3bae51b5-d989-4d28-8fd8-76fcc2251473","age":23,"name":"Tania Fields","gender":"female","company":"XTH","email":"taniafields@xth.com","phone":"+44 7884559327","registered":"2018-08-09T07:02:23 -01:00"},{"id":"d6cfa935-145a-4d03-b69b-f69358ca80c3","age":27,"name":"Johnson Pugh","gender":"male","company":"LYRIA","email":"johnsonpugh@lyria.com","phone":"+44 7936507340","registered":"2014-10-17T05:36:47 -01:00"},{"id":"2fcc679e-3a42-4bc7-b01a-8ac912295870","age":38,"name":"Boone Torres","gender":"male","company":"MAGNAFONE","email":"boonetorres@magnafone.com","phone":"+44 7899512276","registered":"2014-11-06T08:31:22 -00:00"},{"id":"d32482f9-a8ab-4e28-b952-2bdaf550986f","age":40,"name":"Mcclure Barrera","gender":"male","company":"DIGIFAD","email":"mcclurebarrera@digifad.com","phone":"+44 7902451214","registered":"2019-04-26T10:54:54 -01:00"},{"id":"3f68fe96-eb1f-418e-b381-8ce20b7ce5f8","age":40,"name":"Baird Nash","gender":"male","company":"SPACEWAX","email":"bairdnash@spacewax.com","phone":"+44 7830495274","registered":"2015-07-26T06:02:30 -01:00"},{"id":"f0fc59f4-4eac-43b2-a1ce-01440bc3dd78","age":28,"name":"King Mendoza","gender":"male","company":"AUTOGRATE","email":"kingmendoza@autograte.com","phone":"+44 7981482245","registered":"2019-05-19T12:53:00 -01:00"},{"id":"b9466ffd-2062-4997-b5e2-4e14b3216f38","age":39,"name":"Shelby Tyson","gender":"female","company":"EDECINE","email":"shelbytyson@edecine.com","phone":"+44 7941508385","registered":"2021-05-10T02:04:53 -01:00"},{"id":"56613e81-bb9c-420b-8eca-17a7ea9c0741","age":38,"name":"Marie Sellers","gender":"female","company":"SLAMBDA","email":"mariesellers@slambda.com","phone":"+44 7906539252","registered":"2018-12-04T10:16:02 -00:00"},{"id":"e9fc470e-813a-4a6a-8bc3-6f27e3fd66e3","age":26,"name":"Wilkerson Schneider","gender":"male","company":"PROTODYNE","email":"wilkersonschneider@protodyne.com","phone":"+44 7858444201","registered":"2017-02-03T01:08:22 -00:00"},{"id":"3af6c678-621f-4d98-b18a-8d36730535ac","age":23,"name":"Stacey Olsen","gender":"female","company":"TUBESYS","email":"staceyolsen@tubesys.com","phone":"+44 7986453350","registered":"2014-01-07T09:07:18 -00:00"},{"id":"8648880d-073d-4106-9fdb-10c7ffee1135","age":31,"name":"Pearson Morin","gender":"male","company":"ENOMEN","email":"pearsonmorin@enomen.com","phone":"+44 7874538297","registered":"2021-02-10T12:48:14 -00:00"},{"id":"eeb76a80-2e70-46c8-a430-679a5c3da301","age":39,"name":"Parks Cunningham","gender":"male","company":"QUILCH","email":"parkscunningham@quilch.com","phone":"+44 7851533262","registered":"2023-01-03T12:34:01 -00:00"},{"id":"651729cc-33ec-46f3-8037-0c515faee695","age":38,"name":"Angelia Fletcher","gender":"female","company":"PARAGONIA","email":"angeliafletcher@paragonia.com","phone":"+44 7941548291","registered":"2018-07-06T07:15:00 -01:00"}]');var isEqual=__webpack_require__("./node_modules/lodash/isEqual.js"),isEqual_default=__webpack_require__.n(isEqual);function filtersReducer(s,a){const newState={...s};switch(a.type){case"set_filters":return{...newState,...a.filters};case"reset":return{...a.filters};default:throw console.error(a),new Error("unhandled case")}}function useUrlFiltersWithPage({itemsPerPage,fromQuery,toQuery,...input}){const defaultLiveFilters={page:1,...input.defaultLiveFilters},res=function useUrlFilters({defaultFilters,defaultLiveFilters,fromQuery,toQuery,router}){const{query,isReady}=router,[filtersReady,setFiltersReady]=(0,react.useState)(!1),[filtersTemp,filtersTempDispatch]=(0,react.useReducer)(filtersReducer,{...defaultFilters}),[filters,_setFiltersDispatch]=(0,react.useReducer)(filtersReducer,{...defaultLiveFilters}),replace=(0,react.useCallback)((newFilters=>{const newQuery={};return Object.entries(toQuery({...filters,...newFilters})).forEach((([k,v])=>{null!=v&&""!==v&&(newQuery[k]="boolean"==typeof v?(0,ww_react_dist.ff)(v):v)})),router.replace({pathname:window.location.pathname,query:newQuery})}),[router]),updateLiveFilters=newFilters=>(filtersTempDispatch({type:"set_filters",filters:{...newFilters}}),_setFiltersDispatch({type:"set_filters",filters:{...newFilters}}),replace(newFilters));return(0,react.useEffect)((()=>{if(!isReady)return;const timeout=setTimeout((()=>{Object.keys(query).length?updateLiveFilters(fromQuery(query)).then((()=>setFiltersReady(!0))):replace(defaultLiveFilters).then((()=>setFiltersReady(!0)))}),0);return()=>clearTimeout(timeout)}),[isReady]),{filtersReady,hasFiltersApplied:(0,react.useMemo)((()=>!isEqual_default()(filters,defaultLiveFilters)),[filters,defaultLiveFilters]),resetFilters:()=>(filtersTempDispatch({type:"reset",filters:{...defaultFilters}}),updateLiveFilters({...defaultLiveFilters})),filtersTemp,liveFilters:filters,updateLiveFilters,updateTempFilters:newFilters=>filtersTempDispatch({type:"set_filters",filters:newFilters})}}({...input,defaultLiveFilters,fromQuery:query=>{const pageFilterParam=query.page||defaultLiveFilters.page.toString(),pageFilterParamParsed=parseInt(pageFilterParam,10);return{page:Number.isNaN(pageFilterParamParsed)?defaultLiveFilters.page:pageFilterParamParsed,...fromQuery(query)}},toQuery:filters=>({...toQuery(filters),page:String(filters.page)})}),paging=(0,react.useMemo)((()=>({limit:itemsPerPage,offset:(res.liveFilters.page-1)*itemsPerPage})),[res.liveFilters.page,itemsPerPage]);return{...res,itemsPerPage,paging}}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const DEFAULT_FILTERS={name:"test"},DEFAULT_LIVE_FILTERS={...DEFAULT_FILTERS,page:1},FullExampleWithPaging=({throwError})=>{const router=(0,dist.useRouter)(),{isReady,asPath}=router,[isLoading,setIsLoading]=(0,react.useState)(!0),[error,setError]=(0,react.useState)(null),[data,setData]=(0,react.useState)(null),{filtersReady,paging,updateLiveFilters,updateTempFilters,liveFilters,filtersTemp,hasFiltersApplied,resetFilters,itemsPerPage}=useUrlFiltersWithPage({router,itemsPerPage:5,defaultFilters:DEFAULT_FILTERS,defaultLiveFilters:DEFAULT_LIVE_FILTERS,toQuery:filters=>({name:filters.name}),fromQuery:query=>({name:query.name||null||DEFAULT_LIVE_FILTERS.name})});return(0,react.useEffect)((()=>{filtersReady&&(setIsLoading(!0),setError(null),(async vars=>new Promise((resolve=>{setTimeout((()=>{const data=mockData_namespaceObject.filter((item=>vars.where?.name?item.name.toLocaleLowerCase().includes(vars.where.name.trim().toLocaleLowerCase()):!vars.where?.id||item.id===vars.where.id)),offset=vars.paging.offset||0,results=data.slice(offset,offset+vars.paging.limit);resolve({total:data.length,results})}),500*Math.random()+50)})))({paging,where:{name:liveFilters.name}}).then((res=>{if(throwError)throw new Error("A mock error has occurred");setData(res)})).catch((err=>{console.error(err),setError(err),setData(null)})).finally((()=>setIsLoading(!1))))}),[filtersReady,liveFilters,paging,throwError]),isReady&&filtersReady?(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("pre",{className:"bg-light py-2",children:asPath}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("form",{onSubmit:ev=>{ev.preventDefault(),updateLiveFilters({...filtersTemp,page:1})},className:"mb-4",children:(0,jsx_runtime.jsxs)("div",{className:"row g-2 align-items-end flex-lg-nowrap",children:[(0,jsx_runtime.jsxs)("div",{className:"col-12 col-md-4 col-lg-3",children:[(0,jsx_runtime.jsx)(ww_react_dist.Dw,{htmlFor:"name",children:"Name"}),(0,jsx_runtime.jsx)("input",{id:"name",type:"text",className:"form-control",value:filtersTemp.name||"",onChange:ev=>{updateTempFilters({name:ev.target.value})}})]}),(0,jsx_runtime.jsx)("div",{className:"col-12 col-md-auto",children:(0,jsx_runtime.jsx)("button",{className:"btn btn-secondary w-100",type:"submit",children:"Apply Filters"})}),(0,jsx_runtime.jsx)("div",{className:"col-12 col-md-auto",children:(0,jsx_runtime.jsx)("div",{children:hasFiltersApplied&&(0,jsx_runtime.jsx)("button",{className:"btn btn-outline-danger",type:"button",onClick:resetFilters,style:{minWidth:115},children:"Clear Filters"})})})]})})}),(0,jsx_runtime.jsx)("div",{className:"table-responsive",children:(0,jsx_runtime.jsxs)("table",{className:"table",children:[(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{scope:"col",children:"Name"}),(0,jsx_runtime.jsx)("th",{scope:"col",children:"Age"}),(0,jsx_runtime.jsx)("th",{scope:"col",children:"Gender"}),(0,jsx_runtime.jsx)("th",{scope:"col",children:"Company"}),(0,jsx_runtime.jsx)("th",{scope:"col",children:"Email"}),(0,jsx_runtime.jsx)("th",{scope:"col",children:"Telephone"}),(0,jsx_runtime.jsx)("th",{scope:"col",children:"Registered"})]})}),(0,jsx_runtime.jsx)("tbody",{children:(0,jsx_runtime.jsx)(ww_react_dist.J6,{columnCount:7,error,errorPrefix:"Failed to get results",placeholderRowCount:itemsPerPage,isLoading,results:data?.results,renderRow:person=>{return(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("td",{children:person.name}),(0,jsx_runtime.jsx)("td",{children:person.age}),(0,jsx_runtime.jsx)("td",{children:person.gender}),(0,jsx_runtime.jsx)("td",{children:person.company}),(0,jsx_runtime.jsx)("td",{children:person.email}),(0,jsx_runtime.jsx)("td",{children:person.phone}),(0,jsx_runtime.jsx)("td",{children:(dateTimeStr=person.registered,date=(0,toDate.Z)(dateTimeStr),(0,format.Z)(date,"dd-MMM-yyyy HH:mm"))})]},person.id);var date,dateTimeStr}})})]})}),(0,jsx_runtime.jsx)(ww_react_dist.tl,{totalItems:data?.total||0,currentPage:liveFilters.page,itemsPerPage,onChange:page=>{updateLiveFilters({page})},className:"mt-3 d-flex justify-content-center"})]}):(0,jsx_runtime.jsx)(ww_react_dist.F3,{})};FullExampleWithPaging.displayName="FullExampleWithPaging";const useUrlFilters_stories={parameters:{storySource:{source:'import { FC, useEffect, useState } from \'react\';\nimport { Meta } from \'@storybook/react\';\nimport { useRouter } from \'next-router-mock\';\nimport { format } from \'date-fns\';\nimport { toDate } from \'date-fns-tz\';\nimport { MemoryRouterProvider } from \'next-router-mock/MemoryRouterProvider/next-13.5\';\nimport { BsFormLabel, FullPageLoading, Pagination, TableResultsWithPlaceholder } from \'@weavingwebs/ww-react\';\nimport { getData, MockDataQueryResult } from \'../mocks\';\nimport { useUrlFiltersWithPage } from \'../../hooks\';\nconst parseDateTimeFromServer = (dateTimeStr: string): Date =>\n// IMPORTANT: This must use date-fns-tz to convert to local timezone.\ntoDate(dateTimeStr);\nconst formatDateTime = (date: Date) => format(date, \'dd-MMM-yyyy HH:mm\');\nconst ITEMS_PER_PAGE = 5;\ntype Filters = {\n  name: string | null | undefined;\n};\ntype LiveFilters = Filters & {\n  page: number;\n};\n\n// Note: these must be listed out one by one.\nconst DEFAULT_FILTERS: Filters = {\n  name: \'test\'\n};\nconst DEFAULT_LIVE_FILTERS: LiveFilters = {\n  ...DEFAULT_FILTERS,\n  page: 1\n};\ntype UrlParamsFilteredTableProps = {\n  throwError?: boolean;\n};\nexport const FullExampleWithPaging: FC<UrlParamsFilteredTableProps> = ({\n  throwError\n}) => {\n  const router = useRouter();\n  const {\n    isReady,\n    asPath\n  } = router;\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<MockDataQueryResult | null>(null);\n  const {\n    filtersReady,\n    paging,\n    updateLiveFilters,\n    updateTempFilters,\n    liveFilters,\n    filtersTemp,\n    hasFiltersApplied,\n    resetFilters,\n    itemsPerPage\n  } = useUrlFiltersWithPage<Filters, Filters>({\n    router,\n    itemsPerPage: ITEMS_PER_PAGE,\n    defaultFilters: DEFAULT_FILTERS,\n    defaultLiveFilters: DEFAULT_LIVE_FILTERS,\n    toQuery: filters => {\n      return {\n        name: filters.name\n      };\n    },\n    fromQuery: query => {\n      const nameFilter = (query.name as string) || null;\n\n      // If a url param is not present, we need to default it ourselves.\n      return {\n        name: nameFilter || DEFAULT_LIVE_FILTERS.name\n      };\n    }\n  });\n\n  // Run the query when the filters change.\n  useEffect(() => {\n    // Important: Only run the query when the filters are ready, if we run too\n    // early then the url params will not have been parsed yet.\n    if (!filtersReady) {\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    getData({\n      paging,\n      where: {\n        name: liveFilters.name\n      }\n    }).then(res => {\n      if (throwError) {\n        throw new Error(\'A mock error has occurred\');\n      }\n      setData(res);\n    }).catch(err => {\n      \n      console.error(err);\n      setError(err);\n      setData(null);\n    }).finally(() => setIsLoading(false));\n  }, [filtersReady, liveFilters, paging, throwError]);\n  if (!isReady || !filtersReady) {\n    return <FullPageLoading />;\n  }\n  return <div>\n      {/* Render the current URL for demo purposes */}\n      <pre className="bg-light py-2">{asPath}</pre>\n\n      {/* Filters */}\n      <div>\n        <form onSubmit={ev => {\n        ev.preventDefault();\n        updateLiveFilters({\n          ...filtersTemp,\n          page: 1 // IMPORTANT: Reset pager when changing filters.\n        });\n      }} className="mb-4">\n          <div className="row g-2 align-items-end flex-lg-nowrap">\n            <div className="col-12 col-md-4 col-lg-3">\n              <BsFormLabel htmlFor="name">Name</BsFormLabel>\n              <input id="name" type="text" className="form-control" value={filtersTemp.name || \'\'} onChange={ev => {\n              updateTempFilters({\n                name: ev.target.value\n              });\n            }} />\n            </div>\n            <div className="col-12 col-md-auto">\n              <button className="btn btn-secondary w-100" type="submit">\n                Apply Filters\n              </button>\n            </div>\n\n            <div className="col-12 col-md-auto">\n              <div>\n                {hasFiltersApplied && <button className="btn btn-outline-danger" type="button" onClick={resetFilters} style={{\n                minWidth: 115\n              }}>\n                    Clear Filters\n                  </button>}\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      {/* Results */}\n      <div className="table-responsive">\n        <table className="table">\n          <thead>\n            <tr>\n              <th scope="col">Name</th>\n              <th scope="col">Age</th>\n              <th scope="col">Gender</th>\n              <th scope="col">Company</th>\n              <th scope="col">Email</th>\n              <th scope="col">Telephone</th>\n              <th scope="col">Registered</th>\n            </tr>\n          </thead>\n          <tbody>\n            <TableResultsWithPlaceholder columnCount={7} error={error} errorPrefix="Failed to get results" placeholderRowCount={itemsPerPage} isLoading={isLoading} results={data?.results} renderRow={person => <tr key={person.id}>\n                  <td>{person.name}</td>\n                  <td>{person.age}</td>\n                  <td>{person.gender}</td>\n                  <td>{person.company}</td>\n                  <td>{person.email}</td>\n                  <td>{person.phone}</td>\n                  <td>\n                    {formatDateTime(parseDateTimeFromServer(person.registered))}\n                  </td>\n                </tr>} />\n          </tbody>\n        </table>\n      </div>\n\n      <Pagination totalItems={data?.total || 0} currentPage={liveFilters.page} itemsPerPage={itemsPerPage} onChange={page => {\n      updateLiveFilters({\n        page\n      });\n    }} className="mt-3 d-flex justify-content-center" />\n    </div>;\n};\nconst meta: Meta<typeof FullExampleWithPaging> = {\n  title: \'Hooks/useUrlFilters\',\n  component: FullExampleWithPaging,\n  decorators: [\n  // Make next/link work.\n  Story => <MemoryRouterProvider>\n        <Story />\n      </MemoryRouterProvider>]\n};\nexport default meta;\nFullExampleWithPaging.parameters = {\n  ...FullExampleWithPaging.parameters,\n  docs: {\n    ...FullExampleWithPaging.parameters?.docs,\n    source: {\n      originalSource: "({\\n  throwError\\n}) => {\\n  const router = useRouter();\\n  const {\\n    isReady,\\n    asPath\\n  } = router;\\n  const [isLoading, setIsLoading] = useState(true);\\n  const [error, setError] = useState<Error | null>(null);\\n  const [data, setData] = useState<MockDataQueryResult | null>(null);\\n  const {\\n    filtersReady,\\n    paging,\\n    updateLiveFilters,\\n    updateTempFilters,\\n    liveFilters,\\n    filtersTemp,\\n    hasFiltersApplied,\\n    resetFilters,\\n    itemsPerPage\\n  } = useUrlFiltersWithPage<Filters, Filters>({\\n    router,\\n    itemsPerPage: ITEMS_PER_PAGE,\\n    defaultFilters: DEFAULT_FILTERS,\\n    defaultLiveFilters: DEFAULT_LIVE_FILTERS,\\n    toQuery: filters => {\\n      return {\\n        name: filters.name\\n      };\\n    },\\n    fromQuery: query => {\\n      const nameFilter = (query.name as string) || null;\\n\\n      // If a url param is not present, we need to default it ourselves.\\n      return {\\n        name: nameFilter || DEFAULT_LIVE_FILTERS.name\\n      };\\n    }\\n  });\\n\\n  // Run the query when the filters change.\\n  useEffect(() => {\\n    // Important: Only run the query when the filters are ready, if we run too\\n    // early then the url params will not have been parsed yet.\\n    if (!filtersReady) {\\n      return;\\n    }\\n    setIsLoading(true);\\n    setError(null);\\n    getData({\\n      paging,\\n      where: {\\n        name: liveFilters.name\\n      }\\n    }).then(res => {\\n      if (throwError) {\\n        throw new Error(\'A mock error has occurred\');\\n      }\\n      setData(res);\\n    }).catch(err => {\\n      // eslint-disable-next-line no-console\\n      console.error(err);\\n      setError(err);\\n      setData(null);\\n    }).finally(() => setIsLoading(false));\\n  }, [filtersReady, liveFilters, paging, throwError]);\\n  if (!isReady || !filtersReady) {\\n    return <FullPageLoading />;\\n  }\\n  return <div>\\n      {/* Render the current URL for demo purposes */}\\n      <pre className=\\"bg-light py-2\\">{asPath}</pre>\\n\\n      {/* Filters */}\\n      <div>\\n        <form onSubmit={ev => {\\n        ev.preventDefault();\\n        updateLiveFilters({\\n          ...filtersTemp,\\n          page: 1 // IMPORTANT: Reset pager when changing filters.\\n        });\\n      }} className=\\"mb-4\\">\\n          <div className=\\"row g-2 align-items-end flex-lg-nowrap\\">\\n            <div className=\\"col-12 col-md-4 col-lg-3\\">\\n              <BsFormLabel htmlFor=\\"name\\">Name</BsFormLabel>\\n              <input id=\\"name\\" type=\\"text\\" className=\\"form-control\\" value={filtersTemp.name || \'\'} onChange={ev => {\\n              updateTempFilters({\\n                name: ev.target.value\\n              });\\n            }} />\\n            </div>\\n            <div className=\\"col-12 col-md-auto\\">\\n              <button className=\\"btn btn-secondary w-100\\" type=\\"submit\\">\\n                Apply Filters\\n              </button>\\n            </div>\\n\\n            <div className=\\"col-12 col-md-auto\\">\\n              <div>\\n                {hasFiltersApplied && <button className=\\"btn btn-outline-danger\\" type=\\"button\\" onClick={resetFilters} style={{\\n                minWidth: 115\\n              }}>\\n                    Clear Filters\\n                  </button>}\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n\\n      {/* Results */}\\n      <div className=\\"table-responsive\\">\\n        <table className=\\"table\\">\\n          <thead>\\n            <tr>\\n              <th scope=\\"col\\">Name</th>\\n              <th scope=\\"col\\">Age</th>\\n              <th scope=\\"col\\">Gender</th>\\n              <th scope=\\"col\\">Company</th>\\n              <th scope=\\"col\\">Email</th>\\n              <th scope=\\"col\\">Telephone</th>\\n              <th scope=\\"col\\">Registered</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <TableResultsWithPlaceholder columnCount={7} error={error} errorPrefix=\\"Failed to get results\\" placeholderRowCount={itemsPerPage} isLoading={isLoading} results={data?.results} renderRow={person => <tr key={person.id}>\\n                  <td>{person.name}</td>\\n                  <td>{person.age}</td>\\n                  <td>{person.gender}</td>\\n                  <td>{person.company}</td>\\n                  <td>{person.email}</td>\\n                  <td>{person.phone}</td>\\n                  <td>\\n                    {formatDateTime(parseDateTimeFromServer(person.registered))}\\n                  </td>\\n                </tr>} />\\n          </tbody>\\n        </table>\\n      </div>\\n\\n      <Pagination totalItems={data?.total || 0} currentPage={liveFilters.page} itemsPerPage={itemsPerPage} onChange={page => {\\n      updateLiveFilters({\\n        page\\n      });\\n    }} className=\\"mt-3 d-flex justify-content-center\\" />\\n    </div>;\\n}",\n      ...FullExampleWithPaging.parameters?.docs?.source\n    }\n  }\n};',locationsMap:{"full-example-with-paging":{startLoc:{col:70,line:33},endLoc:{col:1,line:180},startBody:{col:70,line:33},endBody:{col:1,line:180}}}}},title:"Hooks/useUrlFilters",component:FullExampleWithPaging,decorators:[Story=>(0,jsx_runtime.jsx)(next_13_5.K,{children:(0,jsx_runtime.jsx)(Story,{})})]};FullExampleWithPaging.parameters={...FullExampleWithPaging.parameters,docs:{...FullExampleWithPaging.parameters?.docs,source:{originalSource:'({\n  throwError\n}) => {\n  const router = useRouter();\n  const {\n    isReady,\n    asPath\n  } = router;\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<MockDataQueryResult | null>(null);\n  const {\n    filtersReady,\n    paging,\n    updateLiveFilters,\n    updateTempFilters,\n    liveFilters,\n    filtersTemp,\n    hasFiltersApplied,\n    resetFilters,\n    itemsPerPage\n  } = useUrlFiltersWithPage<Filters, Filters>({\n    router,\n    itemsPerPage: ITEMS_PER_PAGE,\n    defaultFilters: DEFAULT_FILTERS,\n    defaultLiveFilters: DEFAULT_LIVE_FILTERS,\n    toQuery: filters => {\n      return {\n        name: filters.name\n      };\n    },\n    fromQuery: query => {\n      const nameFilter = (query.name as string) || null;\n\n      // If a url param is not present, we need to default it ourselves.\n      return {\n        name: nameFilter || DEFAULT_LIVE_FILTERS.name\n      };\n    }\n  });\n\n  // Run the query when the filters change.\n  useEffect(() => {\n    // Important: Only run the query when the filters are ready, if we run too\n    // early then the url params will not have been parsed yet.\n    if (!filtersReady) {\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    getData({\n      paging,\n      where: {\n        name: liveFilters.name\n      }\n    }).then(res => {\n      if (throwError) {\n        throw new Error(\'A mock error has occurred\');\n      }\n      setData(res);\n    }).catch(err => {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      setError(err);\n      setData(null);\n    }).finally(() => setIsLoading(false));\n  }, [filtersReady, liveFilters, paging, throwError]);\n  if (!isReady || !filtersReady) {\n    return <FullPageLoading />;\n  }\n  return <div>\n      {/* Render the current URL for demo purposes */}\n      <pre className="bg-light py-2">{asPath}</pre>\n\n      {/* Filters */}\n      <div>\n        <form onSubmit={ev => {\n        ev.preventDefault();\n        updateLiveFilters({\n          ...filtersTemp,\n          page: 1 // IMPORTANT: Reset pager when changing filters.\n        });\n      }} className="mb-4">\n          <div className="row g-2 align-items-end flex-lg-nowrap">\n            <div className="col-12 col-md-4 col-lg-3">\n              <BsFormLabel htmlFor="name">Name</BsFormLabel>\n              <input id="name" type="text" className="form-control" value={filtersTemp.name || \'\'} onChange={ev => {\n              updateTempFilters({\n                name: ev.target.value\n              });\n            }} />\n            </div>\n            <div className="col-12 col-md-auto">\n              <button className="btn btn-secondary w-100" type="submit">\n                Apply Filters\n              </button>\n            </div>\n\n            <div className="col-12 col-md-auto">\n              <div>\n                {hasFiltersApplied && <button className="btn btn-outline-danger" type="button" onClick={resetFilters} style={{\n                minWidth: 115\n              }}>\n                    Clear Filters\n                  </button>}\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      {/* Results */}\n      <div className="table-responsive">\n        <table className="table">\n          <thead>\n            <tr>\n              <th scope="col">Name</th>\n              <th scope="col">Age</th>\n              <th scope="col">Gender</th>\n              <th scope="col">Company</th>\n              <th scope="col">Email</th>\n              <th scope="col">Telephone</th>\n              <th scope="col">Registered</th>\n            </tr>\n          </thead>\n          <tbody>\n            <TableResultsWithPlaceholder columnCount={7} error={error} errorPrefix="Failed to get results" placeholderRowCount={itemsPerPage} isLoading={isLoading} results={data?.results} renderRow={person => <tr key={person.id}>\n                  <td>{person.name}</td>\n                  <td>{person.age}</td>\n                  <td>{person.gender}</td>\n                  <td>{person.company}</td>\n                  <td>{person.email}</td>\n                  <td>{person.phone}</td>\n                  <td>\n                    {formatDateTime(parseDateTimeFromServer(person.registered))}\n                  </td>\n                </tr>} />\n          </tbody>\n        </table>\n      </div>\n\n      <Pagination totalItems={data?.total || 0} currentPage={liveFilters.page} itemsPerPage={itemsPerPage} onChange={page => {\n      updateLiveFilters({\n        page\n      });\n    }} className="mt-3 d-flex justify-content-center" />\n    </div>;\n}',...FullExampleWithPaging.parameters?.docs?.source}}};const __namedExportsOrder=["FullExampleWithPaging"];try{FullExampleWithPaging.displayName="FullExampleWithPaging",FullExampleWithPaging.__docgenInfo={description:"",displayName:"FullExampleWithPaging",props:{throwError:{defaultValue:null,description:"",name:"throwError",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/hooks/useUrlFilters.stories.tsx#FullExampleWithPaging"]={docgenInfo:FullExampleWithPaging.__docgenInfo,name:"FullExampleWithPaging",path:"src/stories/hooks/useUrlFilters.stories.tsx#FullExampleWithPaging"})}catch(__react_docgen_typescript_loader_error){}},"./src/stories/hooks/useUrlFilters.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_home_runner_work_ww_react_next_ww_react_next_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_useUrlFilters_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/stories/hooks/useUrlFilters.stories.tsx");const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_home_runner_work_ww_react_next_ww_react_next_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{})})):_createMdxContent();function _createMdxContent(){const _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",a:"a",h3:"h3"},(0,_home_runner_work_ww_react_next_ww_react_next_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.h_,{of:_useUrlFilters_stories__WEBPACK_IMPORTED_MODULE_2__.default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Dx,{children:"useUrlFilters"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"const router = useRouter();\nconst {\n  filtersReady,\n  updateLiveFilters,\n  updateTempFilters,\n  liveFilters,\n  filtersTemp,\n  hasFiltersApplied,\n  resetFilters,\n  itemsPerPage,\n} = useUrlFilters<Filters, LiveFilters>({\n  router,\n  defaultFilters: DEFAULT_FILTERS,\n  defaultLiveFilters: DEFAULT_LIVE_FILTERS,\n  toQuery: (filters) => {\n    return {\n      name: filters.name,\n    };\n  },\n  fromQuery: (query) => {\n    return {\n      name: (query.name as string) || null,\n    };\n  },\n});\n\nuseEffect(() => {\n  // Important: Only run the query when the filters are ready, if we run too\n  // early then the url params will not have been parsed yet.\n  if (!filtersReady) {\n    return;\n  }\n\n  // Run the query.\n  runQuery({\n    variables: {\n      filters: liveFilters,\n    },\n  });\n}, [filtersReady, liveFilters]);\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["See ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"?path=/story/hooks-useurlfilters--full-example-with-paging",children:"Url Params Filtered Table"})," for an example of ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useUrlFiltersWithPage"}),"."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"live-vs-temp-filters",children:"Live vs Temp Filters"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useUrlFilters"})," & ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useUrlFiltersWithPage"})," hooks have two sets of filters:"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h3,{id:"filterstempupdatetempfilters",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"filtersTemp"}),"/",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"updateTempFilters"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"These are the current values of the filters form and may not necessarily reflect\nthe current filters (and thus the current URL) until the user submits the form."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:'<input\n  id="name"\n  type="text"\n  className="form-control"\n  value={filtersTemp.name || \'\'}\n  onChange={(ev) => {\n    updateTempFilters({ name: ev.target.value });\n  }}\n/>\n'})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.h3,{id:"livefiltersupdatelivefilters",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"liveFilters"}),"/",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"updateLiveFilters"})]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["These are the currently applied filters and will be reflected in the URL.\nThey should be updated from ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"filtersTemp"})," when the user submits the form."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Note that some filters may be excluded from filtersTemp & only present in\nliveFilters. This is useful for parameters such as 'page' which should be\napplied instantly and reset when the user changes the filters form."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-tsx",children:"<form\n  onSubmit={(ev) => {\n    ev.preventDefault();\n    updateLiveFilters({\n      ...filtersTemp,\n      page: 1,\n    });\n  }}\n>\n"})})]})}}}}]);